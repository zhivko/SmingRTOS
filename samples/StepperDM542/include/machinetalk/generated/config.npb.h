/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3-dev at Wed May 25 22:29:16 2016. */

#ifndef PB_CONFIG_NPB_H_INCLUDED
#define PB_CONFIG_NPB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _pb_ApplicationType {
    pb_ApplicationType_QT5_QML = 1,
    pb_ApplicationType_GLADEVCP = 2,
    pb_ApplicationType_JAVASCRIPT = 3
} pb_ApplicationType;

typedef enum _pb_FileContent {
    pb_FileContent_CLEARTEXT = 1,
    pb_FileContent_ZLIB = 2
} pb_FileContent;

/* Struct definitions */
typedef struct _pb_MachineInfo {
    pb_callback_t type;
    pb_callback_t manufacturer;
    pb_callback_t model;
    pb_callback_t variant;
} pb_MachineInfo;

typedef struct _pb_Application {
    pb_callback_t name;
    pb_callback_t description;
    bool has_type;
    pb_ApplicationType type;
    pb_callback_t weburi;
    pb_callback_t file;
} pb_Application;

typedef struct _pb_File {
    pb_callback_t name;
    pb_FileContent encoding;
    pb_callback_t blob;
} pb_File;

typedef struct _pb_StdoutLine {
    int32_t index;
    pb_callback_t line;
} pb_StdoutLine;

typedef struct _pb_Launcher {
    int32_t index;
    pb_callback_t name;
    pb_callback_t description;
    bool has_image;
    pb_File image;
    bool has_info;
    pb_MachineInfo info;
    bool has_running;
    bool running;
    bool has_terminating;
    bool terminating;
    pb_callback_t command;
    bool has_shell;
    bool shell;
    pb_callback_t output;
    bool has_returncode;
    int32_t returncode;
    pb_callback_t workdir;
} pb_Launcher;

/* Default values for struct fields */

/* Initializer values for message structs */
#define pb_File_init_default                     {{{NULL}, NULL}, (pb_FileContent)0, {{NULL}, NULL}}
#define pb_Application_init_default              {{{NULL}, NULL}, {{NULL}, NULL}, false, (pb_ApplicationType)0, {{NULL}, NULL}, {{NULL}, NULL}}
#define pb_StdoutLine_init_default               {0, {{NULL}, NULL}}
#define pb_MachineInfo_init_default              {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define pb_Launcher_init_default                 {0, {{NULL}, NULL}, {{NULL}, NULL}, false, pb_File_init_default, false, pb_MachineInfo_init_default, false, 0, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}
#define pb_File_init_zero                        {{{NULL}, NULL}, (pb_FileContent)0, {{NULL}, NULL}}
#define pb_Application_init_zero                 {{{NULL}, NULL}, {{NULL}, NULL}, false, (pb_ApplicationType)0, {{NULL}, NULL}, {{NULL}, NULL}}
#define pb_StdoutLine_init_zero                  {0, {{NULL}, NULL}}
#define pb_MachineInfo_init_zero                 {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define pb_Launcher_init_zero                    {0, {{NULL}, NULL}, {{NULL}, NULL}, false, pb_File_init_zero, false, pb_MachineInfo_init_zero, false, 0, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}, false, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define pb_MachineInfo_type_tag                  1
#define pb_MachineInfo_manufacturer_tag          2
#define pb_MachineInfo_model_tag                 3
#define pb_MachineInfo_variant_tag               4
#define pb_Application_name_tag                  1
#define pb_Application_description_tag           2
#define pb_Application_type_tag                  3
#define pb_Application_weburi_tag                4
#define pb_Application_file_tag                  5
#define pb_File_name_tag                         1
#define pb_File_encoding_tag                     2
#define pb_File_blob_tag                         3
#define pb_StdoutLine_index_tag                  1
#define pb_StdoutLine_line_tag                   2
#define pb_Launcher_index_tag                    1
#define pb_Launcher_name_tag                     2
#define pb_Launcher_description_tag              3
#define pb_Launcher_image_tag                    4
#define pb_Launcher_info_tag                     5
#define pb_Launcher_running_tag                  6
#define pb_Launcher_terminating_tag              7
#define pb_Launcher_command_tag                  8
#define pb_Launcher_shell_tag                    9
#define pb_Launcher_output_tag                   10
#define pb_Launcher_returncode_tag               11
#define pb_Launcher_workdir_tag                  12

/* Struct field encoding specification for nanopb */
extern const pb_field_t pb_File_fields[4];
extern const pb_field_t pb_Application_fields[6];
extern const pb_field_t pb_StdoutLine_fields[3];
extern const pb_field_t pb_MachineInfo_fields[5];
extern const pb_field_t pb_Launcher_fields[13];

/* Maximum encoded size of messages (where known) */

/* helper macros for message type ids if set with */
/* option (nanopb_msgopt).msgid = <id>; */

#ifdef PB_MSGID
#define PB_MSG_200 pb_File
#define PB_MSG_201 pb_Application
#define PB_MSG_202 pb_StdoutLine
#define PB_MSG_203 pb_MachineInfo
#define PB_MSG_204 pb_Launcher

#define CONFIG_MESSAGES \
	PB_MSG(200,-1,pb_File) \
	PB_MSG(201,-1,pb_Application) \
	PB_MSG(202,-1,pb_StdoutLine) \
	PB_MSG(203,-1,pb_MachineInfo) \
	PB_MSG(204,-1,pb_Launcher) \

#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
