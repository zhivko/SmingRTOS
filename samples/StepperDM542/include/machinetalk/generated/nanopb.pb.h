// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nanopb.proto

#ifndef PROTOBUF_nanopb_2eproto__INCLUDED
#define PROTOBUF_nanopb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_nanopb_2eproto();
void protobuf_AssignDesc_nanopb_2eproto();
void protobuf_ShutdownFile_nanopb_2eproto();

class NanoPBOptions;

enum FieldType {
  FT_DEFAULT = 0,
  FT_CALLBACK = 1,
  FT_POINTER = 4,
  FT_STATIC = 2,
  FT_IGNORE = 3
};
bool FieldType_IsValid(int value);
const FieldType FieldType_MIN = FT_DEFAULT;
const FieldType FieldType_MAX = FT_POINTER;
const int FieldType_ARRAYSIZE = FieldType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FieldType_descriptor();
inline const ::std::string& FieldType_Name(FieldType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FieldType_descriptor(), value);
}
inline bool FieldType_Parse(
    const ::std::string& name, FieldType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FieldType>(
    FieldType_descriptor(), name, value);
}
enum IntSize {
  IS_DEFAULT = 0,
  IS_8 = 8,
  IS_16 = 16,
  IS_32 = 32,
  IS_64 = 64
};
bool IntSize_IsValid(int value);
const IntSize IntSize_MIN = IS_DEFAULT;
const IntSize IntSize_MAX = IS_64;
const int IntSize_ARRAYSIZE = IntSize_MAX + 1;

const ::google::protobuf::EnumDescriptor* IntSize_descriptor();
inline const ::std::string& IntSize_Name(IntSize value) {
  return ::google::protobuf::internal::NameOfEnum(
    IntSize_descriptor(), value);
}
inline bool IntSize_Parse(
    const ::std::string& name, IntSize* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IntSize>(
    IntSize_descriptor(), name, value);
}
// ===================================================================

class NanoPBOptions : public ::google::protobuf::Message {
 public:
  NanoPBOptions();
  virtual ~NanoPBOptions();

  NanoPBOptions(const NanoPBOptions& from);

  inline NanoPBOptions& operator=(const NanoPBOptions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NanoPBOptions& default_instance();

  void Swap(NanoPBOptions* other);

  // implements Message ----------------------------------------------

  NanoPBOptions* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NanoPBOptions& from);
  void MergeFrom(const NanoPBOptions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 max_size = 1;
  inline bool has_max_size() const;
  inline void clear_max_size();
  static const int kMaxSizeFieldNumber = 1;
  inline ::google::protobuf::int32 max_size() const;
  inline void set_max_size(::google::protobuf::int32 value);

  // optional int32 max_count = 2;
  inline bool has_max_count() const;
  inline void clear_max_count();
  static const int kMaxCountFieldNumber = 2;
  inline ::google::protobuf::int32 max_count() const;
  inline void set_max_count(::google::protobuf::int32 value);

  // optional .IntSize int_size = 7 [default = IS_DEFAULT];
  inline bool has_int_size() const;
  inline void clear_int_size();
  static const int kIntSizeFieldNumber = 7;
  inline ::IntSize int_size() const;
  inline void set_int_size(::IntSize value);

  // optional .FieldType type = 3 [default = FT_DEFAULT];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::FieldType type() const;
  inline void set_type(::FieldType value);

  // optional bool long_names = 4 [default = true];
  inline bool has_long_names() const;
  inline void clear_long_names();
  static const int kLongNamesFieldNumber = 4;
  inline bool long_names() const;
  inline void set_long_names(bool value);

  // optional bool packed_struct = 5 [default = false];
  inline bool has_packed_struct() const;
  inline void clear_packed_struct();
  static const int kPackedStructFieldNumber = 5;
  inline bool packed_struct() const;
  inline void set_packed_struct(bool value);

  // optional bool skip_message = 6 [default = false];
  inline bool has_skip_message() const;
  inline void clear_skip_message();
  static const int kSkipMessageFieldNumber = 6;
  inline bool skip_message() const;
  inline void set_skip_message(bool value);

  // optional bool no_unions = 8 [default = false];
  inline bool has_no_unions() const;
  inline void clear_no_unions();
  static const int kNoUnionsFieldNumber = 8;
  inline bool no_unions() const;
  inline void set_no_unions(bool value);

  // optional uint32 msgid = 9;
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgidFieldNumber = 9;
  inline ::google::protobuf::uint32 msgid() const;
  inline void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:NanoPBOptions)
 private:
  inline void set_has_max_size();
  inline void clear_has_max_size();
  inline void set_has_max_count();
  inline void clear_has_max_count();
  inline void set_has_int_size();
  inline void clear_has_int_size();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_long_names();
  inline void clear_has_long_names();
  inline void set_has_packed_struct();
  inline void clear_has_packed_struct();
  inline void set_has_skip_message();
  inline void clear_has_skip_message();
  inline void set_has_no_unions();
  inline void clear_has_no_unions();
  inline void set_has_msgid();
  inline void clear_has_msgid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 max_size_;
  ::google::protobuf::int32 max_count_;
  int int_size_;
  int type_;
  bool long_names_;
  bool packed_struct_;
  bool skip_message_;
  bool no_unions_;
  ::google::protobuf::uint32 msgid_;
  friend void  protobuf_AddDesc_nanopb_2eproto();
  friend void protobuf_AssignDesc_nanopb_2eproto();
  friend void protobuf_ShutdownFile_nanopb_2eproto();

  void InitAsDefaultInstance();
  static NanoPBOptions* default_instance_;
};
// ===================================================================

static const int kNanopbFileoptFieldNumber = 1010;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::NanoPBOptions >, 11, false >
  nanopb_fileopt;
static const int kNanopbMsgoptFieldNumber = 1010;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::NanoPBOptions >, 11, false >
  nanopb_msgopt;
static const int kNanopbEnumoptFieldNumber = 1010;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::NanoPBOptions >, 11, false >
  nanopb_enumopt;
static const int kNanopbFieldNumber = 1010;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::NanoPBOptions >, 11, false >
  nanopb;

// ===================================================================

// NanoPBOptions

// optional int32 max_size = 1;
inline bool NanoPBOptions::has_max_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NanoPBOptions::set_has_max_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NanoPBOptions::clear_has_max_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NanoPBOptions::clear_max_size() {
  max_size_ = 0;
  clear_has_max_size();
}
inline ::google::protobuf::int32 NanoPBOptions::max_size() const {
  // @@protoc_insertion_point(field_get:NanoPBOptions.max_size)
  return max_size_;
}
inline void NanoPBOptions::set_max_size(::google::protobuf::int32 value) {
  set_has_max_size();
  max_size_ = value;
  // @@protoc_insertion_point(field_set:NanoPBOptions.max_size)
}

// optional int32 max_count = 2;
inline bool NanoPBOptions::has_max_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NanoPBOptions::set_has_max_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NanoPBOptions::clear_has_max_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NanoPBOptions::clear_max_count() {
  max_count_ = 0;
  clear_has_max_count();
}
inline ::google::protobuf::int32 NanoPBOptions::max_count() const {
  // @@protoc_insertion_point(field_get:NanoPBOptions.max_count)
  return max_count_;
}
inline void NanoPBOptions::set_max_count(::google::protobuf::int32 value) {
  set_has_max_count();
  max_count_ = value;
  // @@protoc_insertion_point(field_set:NanoPBOptions.max_count)
}

// optional .IntSize int_size = 7 [default = IS_DEFAULT];
inline bool NanoPBOptions::has_int_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NanoPBOptions::set_has_int_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NanoPBOptions::clear_has_int_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NanoPBOptions::clear_int_size() {
  int_size_ = 0;
  clear_has_int_size();
}
inline ::IntSize NanoPBOptions::int_size() const {
  // @@protoc_insertion_point(field_get:NanoPBOptions.int_size)
  return static_cast< ::IntSize >(int_size_);
}
inline void NanoPBOptions::set_int_size(::IntSize value) {
  assert(::IntSize_IsValid(value));
  set_has_int_size();
  int_size_ = value;
  // @@protoc_insertion_point(field_set:NanoPBOptions.int_size)
}

// optional .FieldType type = 3 [default = FT_DEFAULT];
inline bool NanoPBOptions::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NanoPBOptions::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NanoPBOptions::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NanoPBOptions::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::FieldType NanoPBOptions::type() const {
  // @@protoc_insertion_point(field_get:NanoPBOptions.type)
  return static_cast< ::FieldType >(type_);
}
inline void NanoPBOptions::set_type(::FieldType value) {
  assert(::FieldType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:NanoPBOptions.type)
}

// optional bool long_names = 4 [default = true];
inline bool NanoPBOptions::has_long_names() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NanoPBOptions::set_has_long_names() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NanoPBOptions::clear_has_long_names() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NanoPBOptions::clear_long_names() {
  long_names_ = true;
  clear_has_long_names();
}
inline bool NanoPBOptions::long_names() const {
  // @@protoc_insertion_point(field_get:NanoPBOptions.long_names)
  return long_names_;
}
inline void NanoPBOptions::set_long_names(bool value) {
  set_has_long_names();
  long_names_ = value;
  // @@protoc_insertion_point(field_set:NanoPBOptions.long_names)
}

// optional bool packed_struct = 5 [default = false];
inline bool NanoPBOptions::has_packed_struct() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NanoPBOptions::set_has_packed_struct() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NanoPBOptions::clear_has_packed_struct() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NanoPBOptions::clear_packed_struct() {
  packed_struct_ = false;
  clear_has_packed_struct();
}
inline bool NanoPBOptions::packed_struct() const {
  // @@protoc_insertion_point(field_get:NanoPBOptions.packed_struct)
  return packed_struct_;
}
inline void NanoPBOptions::set_packed_struct(bool value) {
  set_has_packed_struct();
  packed_struct_ = value;
  // @@protoc_insertion_point(field_set:NanoPBOptions.packed_struct)
}

// optional bool skip_message = 6 [default = false];
inline bool NanoPBOptions::has_skip_message() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NanoPBOptions::set_has_skip_message() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NanoPBOptions::clear_has_skip_message() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NanoPBOptions::clear_skip_message() {
  skip_message_ = false;
  clear_has_skip_message();
}
inline bool NanoPBOptions::skip_message() const {
  // @@protoc_insertion_point(field_get:NanoPBOptions.skip_message)
  return skip_message_;
}
inline void NanoPBOptions::set_skip_message(bool value) {
  set_has_skip_message();
  skip_message_ = value;
  // @@protoc_insertion_point(field_set:NanoPBOptions.skip_message)
}

// optional bool no_unions = 8 [default = false];
inline bool NanoPBOptions::has_no_unions() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NanoPBOptions::set_has_no_unions() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NanoPBOptions::clear_has_no_unions() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NanoPBOptions::clear_no_unions() {
  no_unions_ = false;
  clear_has_no_unions();
}
inline bool NanoPBOptions::no_unions() const {
  // @@protoc_insertion_point(field_get:NanoPBOptions.no_unions)
  return no_unions_;
}
inline void NanoPBOptions::set_no_unions(bool value) {
  set_has_no_unions();
  no_unions_ = value;
  // @@protoc_insertion_point(field_set:NanoPBOptions.no_unions)
}

// optional uint32 msgid = 9;
inline bool NanoPBOptions::has_msgid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NanoPBOptions::set_has_msgid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NanoPBOptions::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NanoPBOptions::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 NanoPBOptions::msgid() const {
  // @@protoc_insertion_point(field_get:NanoPBOptions.msgid)
  return msgid_;
}
inline void NanoPBOptions::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:NanoPBOptions.msgid)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::FieldType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FieldType>() {
  return ::FieldType_descriptor();
}
template <> struct is_proto_enum< ::IntSize> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IntSize>() {
  return ::IntSize_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_nanopb_2eproto__INCLUDED
