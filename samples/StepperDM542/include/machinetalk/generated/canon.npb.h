/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3-dev at Wed May 25 22:29:19 2016. */

#ifndef PB_CANON_NPB_H_INCLUDED
#define PB_CANON_NPB_H_INCLUDED
#include <pb.h>

#include <machinetalk/generated/types.npb.h>
#include <machinetalk/generated/emcclass.npb.h>
#include <machinetalk/generated/motcmds.npb.h>
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _pb_Emc_Exec_Plugin_Ca1l {
    pb_callback_t call;
} pb_Emc_Exec_Plugin_Ca1l;

typedef struct _pb_Emc_Io_Plugin_Call {
    pb_callback_t call;
} pb_Emc_Io_Plugin_Call;

typedef struct _pb_Emc_Aux_Input_Wait {
    uint32_t index;
    pb_InputType input_type;
    pb_WaitType wait_type;
    double timeout;
} pb_Emc_Aux_Input_Wait;

typedef struct _pb_Emc_Motion_Adaptive {
    bool status;
} pb_Emc_Motion_Adaptive;

typedef struct _pb_Emc_Motion_Set_Aout {
    uint32_t index;
    double start;
    double end;
    bool now;
} pb_Emc_Motion_Set_Aout;

typedef struct _pb_Emc_Motion_Set_Dout {
    uint32_t index;
    bool start;
    bool end;
    bool now;
} pb_Emc_Motion_Set_Dout;

typedef struct _pb_Emc_Operator_Display {
    int32_t id;
    pb_callback_t display;
} pb_Emc_Operator_Display;

typedef struct _pb_Emc_Operator_Error {
    int32_t id;
    pb_callback_t error;
} pb_Emc_Operator_Error;

typedef struct _pb_Emc_Operator_Text {
    int32_t id;
    pb_callback_t text;
} pb_Emc_Operator_Text;

typedef struct _pb_Emc_Spindle_On {
    double speed;
    double factor;
    double xoffset;
} pb_Emc_Spindle_On;

typedef struct _pb_Emc_Spindle_Orient {
    double orientation;
    pb_CanonDirection mode;
} pb_Emc_Spindle_Orient;

typedef struct _pb_Emc_Spindle_Speed {
    double speed;
    double factor;
    double xoffset;
} pb_Emc_Spindle_Speed;

typedef struct _pb_Emc_Spindle_Wait_Orient_Complete {
    double timeout;
} pb_Emc_Spindle_Wait_Orient_Complete;

typedef struct _pb_Emc_Tool_Prepare {
    int32_t pocket;
    int32_t tool;
} pb_Emc_Tool_Prepare;

typedef struct _pb_Emc_Tool_Set_Number {
    int32_t tool;
} pb_Emc_Tool_Set_Number;

typedef struct _pb_Emc_Tool_Set_Offset {
    int32_t pocket;
    int32_t toolno;
    pb_EmcPose offset;
    double diameter;
    double frontangle;
    double backangle;
    int32_t orientation;
} pb_Emc_Tool_Set_Offset;

typedef struct _pb_Emc_Traj_Circular_Move {
    pb_MotionType type;
    pb_EmcPose end;
    pb_PmCartesian center;
    pb_PmCartesian normal;
    double vel;
    double ini_maxvel;
    double acc;
    bool feed_mode;
    int32_t turn;
} pb_Emc_Traj_Circular_Move;

typedef struct _pb_Emc_Traj_Delay {
    double delay;
} pb_Emc_Traj_Delay;

typedef struct _pb_Emc_Traj_Linear_Move {
    pb_MotionType type;
    pb_EmcPose end;
    double vel;
    double ini_maxvel;
    double acc;
    bool feed_mode;
    int32_t indexrotary;
} pb_Emc_Traj_Linear_Move;

typedef struct _pb_Emc_Traj_Probe {
    pb_MotionType type;
    pb_EmcPose pos;
    double vel;
    double ini_maxvel;
    double acc;
    uint32_t probe_type;
} pb_Emc_Traj_Probe;

typedef struct _pb_Emc_Traj_Rigid_Tap {
    pb_EmcPose pos;
    double vel;
    double ini_maxvel;
    double acc;
} pb_Emc_Traj_Rigid_Tap;

typedef struct _pb_Emc_Traj_Set_Fh_Enable {
    bool mode;
} pb_Emc_Traj_Set_Fh_Enable;

typedef struct _pb_Emc_Traj_Set_Fo_Enable {
    bool mode;
} pb_Emc_Traj_Set_Fo_Enable;

typedef struct _pb_Emc_Traj_Set_G5x {
    pb_EmcPose origin;
    pb_OriginIndex g5x_index;
} pb_Emc_Traj_Set_G5x;

typedef struct _pb_Emc_Traj_Set_G92 {
    pb_EmcPose origin;
} pb_Emc_Traj_Set_G92;

typedef struct _pb_Emc_Traj_Set_Offset {
    pb_EmcPose offset;
} pb_Emc_Traj_Set_Offset;

typedef struct _pb_Emc_Traj_Set_Rotation {
    double rotation;
} pb_Emc_Traj_Set_Rotation;

typedef struct _pb_Emc_Traj_Set_So_Enable {
    bool mode;
} pb_Emc_Traj_Set_So_Enable;

typedef struct _pb_Emc_Traj_Set_Spindlesync {
    double feed_per_revolution;
    bool velocity_mode;
} pb_Emc_Traj_Set_Spindlesync;

typedef struct _pb_Emc_Traj_Set_Term_Cond {
    pb_TermConditionType cond;
    double tolerance;
} pb_Emc_Traj_Set_Term_Cond;

/* Default values for struct fields */
extern const double pb_Emc_Spindle_On_speed_default;
extern const double pb_Emc_Spindle_On_factor_default;
extern const double pb_Emc_Spindle_On_xoffset_default;

/* Initializer values for message structs */
#define pb_Emc_Traj_Set_G5x_init_default         {pb_EmcPose_init_default, (pb_OriginIndex)0}
#define pb_Emc_Traj_Set_G92_init_default         {pb_EmcPose_init_default}
#define pb_Emc_Traj_Set_Rotation_init_default    {0}
#define pb_Emc_Traj_Linear_Move_init_default     {(pb_MotionType)0, pb_EmcPose_init_default, 0, 0, 0, 0, 0}
#define pb_Emc_Traj_Probe_init_default           {(pb_MotionType)0, pb_EmcPose_init_default, 0, 0, 0, 0}
#define pb_Emc_Traj_Circular_Move_init_default   {(pb_MotionType)0, pb_EmcPose_init_default, pb_PmCartesian_init_default, pb_PmCartesian_init_default, 0, 0, 0, 0, 0}
#define pb_Emc_Traj_Rigid_Tap_init_default       {pb_EmcPose_init_default, 0, 0, 0}
#define pb_Emc_Traj_Set_Term_Cond_init_default   {(pb_TermConditionType)0, 0}
#define pb_Emc_Traj_Set_Spindlesync_init_default {0, 0}
#define pb_Emc_Traj_Delay_init_default           {0}
#define pb_Emc_Spindle_On_init_default           {0, 0, 0}
#define pb_Emc_Spindle_Speed_init_default        {0, 0, 0}
#define pb_Emc_Spindle_Orient_init_default       {0, (pb_CanonDirection)0}
#define pb_Emc_Spindle_Wait_Orient_Complete_init_default {0}
#define pb_Emc_Tool_Set_Offset_init_default      {0, 0, pb_EmcPose_init_default, 0, 0, 0, 0}
#define pb_Emc_Traj_Set_Offset_init_default      {pb_EmcPose_init_default}
#define pb_Emc_Tool_Prepare_init_default         {0, 0}
#define pb_Emc_Tool_Set_Number_init_default      {0}
#define pb_Emc_Traj_Set_Fo_Enable_init_default   {0}
#define pb_Emc_Traj_Set_So_Enable_init_default   {0}
#define pb_Emc_Traj_Set_Fh_Enable_init_default   {0}
#define pb_Emc_Motion_Adaptive_init_default      {0}
#define pb_Emc_Operator_Display_init_default     {0, {{NULL}, NULL}}
#define pb_Emc_Operator_Text_init_default        {0, {{NULL}, NULL}}
#define pb_Emc_Operator_Error_init_default       {0, {{NULL}, NULL}}
#define pb_Emc_Motion_Set_Dout_init_default      {0, 0, 0, 0}
#define pb_Emc_Motion_Set_Aout_init_default      {0, 0, 0, 0}
#define pb_Emc_Aux_Input_Wait_init_default       {0, (pb_InputType)0, (pb_WaitType)0, 0}
#define pb_Emc_Exec_Plugin_Ca1l_init_default     {{{NULL}, NULL}}
#define pb_Emc_Io_Plugin_Call_init_default       {{{NULL}, NULL}}
#define pb_Emc_Traj_Set_G5x_init_zero            {pb_EmcPose_init_zero, (pb_OriginIndex)0}
#define pb_Emc_Traj_Set_G92_init_zero            {pb_EmcPose_init_zero}
#define pb_Emc_Traj_Set_Rotation_init_zero       {0}
#define pb_Emc_Traj_Linear_Move_init_zero        {(pb_MotionType)0, pb_EmcPose_init_zero, 0, 0, 0, 0, 0}
#define pb_Emc_Traj_Probe_init_zero              {(pb_MotionType)0, pb_EmcPose_init_zero, 0, 0, 0, 0}
#define pb_Emc_Traj_Circular_Move_init_zero      {(pb_MotionType)0, pb_EmcPose_init_zero, pb_PmCartesian_init_zero, pb_PmCartesian_init_zero, 0, 0, 0, 0, 0}
#define pb_Emc_Traj_Rigid_Tap_init_zero          {pb_EmcPose_init_zero, 0, 0, 0}
#define pb_Emc_Traj_Set_Term_Cond_init_zero      {(pb_TermConditionType)0, 0}
#define pb_Emc_Traj_Set_Spindlesync_init_zero    {0, 0}
#define pb_Emc_Traj_Delay_init_zero              {0}
#define pb_Emc_Spindle_On_init_zero              {0, 0, 0}
#define pb_Emc_Spindle_Speed_init_zero           {0, 0, 0}
#define pb_Emc_Spindle_Orient_init_zero          {0, (pb_CanonDirection)0}
#define pb_Emc_Spindle_Wait_Orient_Complete_init_zero {0}
#define pb_Emc_Tool_Set_Offset_init_zero         {0, 0, pb_EmcPose_init_zero, 0, 0, 0, 0}
#define pb_Emc_Traj_Set_Offset_init_zero         {pb_EmcPose_init_zero}
#define pb_Emc_Tool_Prepare_init_zero            {0, 0}
#define pb_Emc_Tool_Set_Number_init_zero         {0}
#define pb_Emc_Traj_Set_Fo_Enable_init_zero      {0}
#define pb_Emc_Traj_Set_So_Enable_init_zero      {0}
#define pb_Emc_Traj_Set_Fh_Enable_init_zero      {0}
#define pb_Emc_Motion_Adaptive_init_zero         {0}
#define pb_Emc_Operator_Display_init_zero        {0, {{NULL}, NULL}}
#define pb_Emc_Operator_Text_init_zero           {0, {{NULL}, NULL}}
#define pb_Emc_Operator_Error_init_zero          {0, {{NULL}, NULL}}
#define pb_Emc_Motion_Set_Dout_init_zero         {0, 0, 0, 0}
#define pb_Emc_Motion_Set_Aout_init_zero         {0, 0, 0, 0}
#define pb_Emc_Aux_Input_Wait_init_zero          {0, (pb_InputType)0, (pb_WaitType)0, 0}
#define pb_Emc_Exec_Plugin_Ca1l_init_zero        {{{NULL}, NULL}}
#define pb_Emc_Io_Plugin_Call_init_zero          {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define pb_Emc_Exec_Plugin_Ca1l_call_tag         20
#define pb_Emc_Io_Plugin_Call_call_tag           20
#define pb_Emc_Aux_Input_Wait_index_tag          10
#define pb_Emc_Aux_Input_Wait_input_type_tag     20
#define pb_Emc_Aux_Input_Wait_wait_type_tag      30
#define pb_Emc_Aux_Input_Wait_timeout_tag        40
#define pb_Emc_Motion_Adaptive_status_tag        10
#define pb_Emc_Motion_Set_Aout_index_tag         10
#define pb_Emc_Motion_Set_Aout_start_tag         20
#define pb_Emc_Motion_Set_Aout_end_tag           30
#define pb_Emc_Motion_Set_Aout_now_tag           40
#define pb_Emc_Motion_Set_Dout_index_tag         10
#define pb_Emc_Motion_Set_Dout_start_tag         20
#define pb_Emc_Motion_Set_Dout_end_tag           30
#define pb_Emc_Motion_Set_Dout_now_tag           40
#define pb_Emc_Operator_Display_id_tag           10
#define pb_Emc_Operator_Display_display_tag      20
#define pb_Emc_Operator_Error_id_tag             10
#define pb_Emc_Operator_Error_error_tag          20
#define pb_Emc_Operator_Text_id_tag              10
#define pb_Emc_Operator_Text_text_tag            20
#define pb_Emc_Spindle_On_speed_tag              10
#define pb_Emc_Spindle_On_factor_tag             20
#define pb_Emc_Spindle_On_xoffset_tag            30
#define pb_Emc_Spindle_Orient_orientation_tag    10
#define pb_Emc_Spindle_Orient_mode_tag           20
#define pb_Emc_Spindle_Speed_speed_tag           10
#define pb_Emc_Spindle_Speed_factor_tag          20
#define pb_Emc_Spindle_Speed_xoffset_tag         30
#define pb_Emc_Spindle_Wait_Orient_Complete_timeout_tag 10
#define pb_Emc_Tool_Prepare_pocket_tag           10
#define pb_Emc_Tool_Prepare_tool_tag             20
#define pb_Emc_Tool_Set_Number_tool_tag          10
#define pb_Emc_Tool_Set_Offset_pocket_tag        10
#define pb_Emc_Tool_Set_Offset_toolno_tag        15
#define pb_Emc_Tool_Set_Offset_offset_tag        20
#define pb_Emc_Tool_Set_Offset_diameter_tag      30
#define pb_Emc_Tool_Set_Offset_frontangle_tag    40
#define pb_Emc_Tool_Set_Offset_backangle_tag     50
#define pb_Emc_Tool_Set_Offset_orientation_tag   60
#define pb_Emc_Traj_Circular_Move_type_tag       10
#define pb_Emc_Traj_Circular_Move_end_tag        20
#define pb_Emc_Traj_Circular_Move_center_tag     25
#define pb_Emc_Traj_Circular_Move_normal_tag     27
#define pb_Emc_Traj_Circular_Move_vel_tag        30
#define pb_Emc_Traj_Circular_Move_ini_maxvel_tag 40
#define pb_Emc_Traj_Circular_Move_acc_tag        50
#define pb_Emc_Traj_Circular_Move_feed_mode_tag  60
#define pb_Emc_Traj_Circular_Move_turn_tag       70
#define pb_Emc_Traj_Delay_delay_tag              10
#define pb_Emc_Traj_Linear_Move_type_tag         10
#define pb_Emc_Traj_Linear_Move_end_tag          20
#define pb_Emc_Traj_Linear_Move_vel_tag          30
#define pb_Emc_Traj_Linear_Move_ini_maxvel_tag   40
#define pb_Emc_Traj_Linear_Move_acc_tag          50
#define pb_Emc_Traj_Linear_Move_feed_mode_tag    60
#define pb_Emc_Traj_Linear_Move_indexrotary_tag  70
#define pb_Emc_Traj_Probe_type_tag               10
#define pb_Emc_Traj_Probe_pos_tag                20
#define pb_Emc_Traj_Probe_vel_tag                30
#define pb_Emc_Traj_Probe_ini_maxvel_tag         40
#define pb_Emc_Traj_Probe_acc_tag                50
#define pb_Emc_Traj_Probe_probe_type_tag         60
#define pb_Emc_Traj_Rigid_Tap_pos_tag            20
#define pb_Emc_Traj_Rigid_Tap_vel_tag            30
#define pb_Emc_Traj_Rigid_Tap_ini_maxvel_tag     40
#define pb_Emc_Traj_Rigid_Tap_acc_tag            50
#define pb_Emc_Traj_Set_Fh_Enable_mode_tag       10
#define pb_Emc_Traj_Set_Fo_Enable_mode_tag       10
#define pb_Emc_Traj_Set_G5x_origin_tag           10
#define pb_Emc_Traj_Set_G5x_g5x_index_tag        20
#define pb_Emc_Traj_Set_G92_origin_tag           10
#define pb_Emc_Traj_Set_Offset_offset_tag        10
#define pb_Emc_Traj_Set_Rotation_rotation_tag    10
#define pb_Emc_Traj_Set_So_Enable_mode_tag       10
#define pb_Emc_Traj_Set_Spindlesync_feed_per_revolution_tag 10
#define pb_Emc_Traj_Set_Spindlesync_velocity_mode_tag 20
#define pb_Emc_Traj_Set_Term_Cond_cond_tag       10
#define pb_Emc_Traj_Set_Term_Cond_tolerance_tag  20

/* Struct field encoding specification for nanopb */
extern const pb_field_t pb_Emc_Traj_Set_G5x_fields[3];
extern const pb_field_t pb_Emc_Traj_Set_G92_fields[2];
extern const pb_field_t pb_Emc_Traj_Set_Rotation_fields[2];
extern const pb_field_t pb_Emc_Traj_Linear_Move_fields[8];
extern const pb_field_t pb_Emc_Traj_Probe_fields[7];
extern const pb_field_t pb_Emc_Traj_Circular_Move_fields[10];
extern const pb_field_t pb_Emc_Traj_Rigid_Tap_fields[5];
extern const pb_field_t pb_Emc_Traj_Set_Term_Cond_fields[3];
extern const pb_field_t pb_Emc_Traj_Set_Spindlesync_fields[3];
extern const pb_field_t pb_Emc_Traj_Delay_fields[2];
extern const pb_field_t pb_Emc_Spindle_On_fields[4];
extern const pb_field_t pb_Emc_Spindle_Speed_fields[4];
extern const pb_field_t pb_Emc_Spindle_Orient_fields[3];
extern const pb_field_t pb_Emc_Spindle_Wait_Orient_Complete_fields[2];
extern const pb_field_t pb_Emc_Tool_Set_Offset_fields[8];
extern const pb_field_t pb_Emc_Traj_Set_Offset_fields[2];
extern const pb_field_t pb_Emc_Tool_Prepare_fields[3];
extern const pb_field_t pb_Emc_Tool_Set_Number_fields[2];
extern const pb_field_t pb_Emc_Traj_Set_Fo_Enable_fields[2];
extern const pb_field_t pb_Emc_Traj_Set_So_Enable_fields[2];
extern const pb_field_t pb_Emc_Traj_Set_Fh_Enable_fields[2];
extern const pb_field_t pb_Emc_Motion_Adaptive_fields[2];
extern const pb_field_t pb_Emc_Operator_Display_fields[3];
extern const pb_field_t pb_Emc_Operator_Text_fields[3];
extern const pb_field_t pb_Emc_Operator_Error_fields[3];
extern const pb_field_t pb_Emc_Motion_Set_Dout_fields[5];
extern const pb_field_t pb_Emc_Motion_Set_Aout_fields[5];
extern const pb_field_t pb_Emc_Aux_Input_Wait_fields[5];
extern const pb_field_t pb_Emc_Exec_Plugin_Ca1l_fields[2];
extern const pb_field_t pb_Emc_Io_Plugin_Call_fields[2];

/* Maximum encoded size of messages (where known) */
#define pb_Emc_Traj_Set_G5x_size                 (13 + pb_EmcPose_size)
#define pb_Emc_Traj_Set_G92_size                 (6 + pb_EmcPose_size)
#define pb_Emc_Traj_Set_Rotation_size            9
#define pb_Emc_Traj_Linear_Move_size             (58 + pb_EmcPose_size)
#define pb_Emc_Traj_Probe_size                   (50 + pb_EmcPose_size)
#define pb_Emc_Traj_Circular_Move_size           (72 + pb_EmcPose_size + pb_PmCartesian_size + pb_PmCartesian_size)
#define pb_Emc_Traj_Rigid_Tap_size               (37 + pb_EmcPose_size)
#define pb_Emc_Traj_Set_Term_Cond_size           16
#define pb_Emc_Traj_Set_Spindlesync_size         12
#define pb_Emc_Traj_Delay_size                   9
#define pb_Emc_Spindle_On_size                   29
#define pb_Emc_Spindle_Speed_size                29
#define pb_Emc_Spindle_Orient_size               16
#define pb_Emc_Spindle_Wait_Orient_Complete_size 9
#define pb_Emc_Tool_Set_Offset_size              (71 + pb_EmcPose_size)
#define pb_Emc_Traj_Set_Offset_size              (6 + pb_EmcPose_size)
#define pb_Emc_Tool_Prepare_size                 23
#define pb_Emc_Tool_Set_Number_size              11
#define pb_Emc_Traj_Set_Fo_Enable_size           2
#define pb_Emc_Traj_Set_So_Enable_size           2
#define pb_Emc_Traj_Set_Fh_Enable_size           2
#define pb_Emc_Motion_Adaptive_size              2
#define pb_Emc_Motion_Set_Dout_size              15
#define pb_Emc_Motion_Set_Aout_size              29
#define pb_Emc_Aux_Input_Wait_size               30

/* helper macros for message type ids if set with */
/* option (nanopb_msgopt).msgid = <id>; */

#ifdef PB_MSGID
#define PB_MSG_100 pb_Emc_Traj_Set_G5x
#define PB_MSG_101 pb_Emc_Traj_Set_G92
#define PB_MSG_102 pb_Emc_Traj_Set_Rotation
#define PB_MSG_103 pb_Emc_Traj_Linear_Move
#define PB_MSG_104 pb_Emc_Traj_Probe
#define PB_MSG_105 pb_Emc_Traj_Circular_Move
#define PB_MSG_106 pb_Emc_Traj_Rigid_Tap
#define PB_MSG_107 pb_Emc_Traj_Set_Term_Cond
#define PB_MSG_108 pb_Emc_Traj_Set_Spindlesync
#define PB_MSG_109 pb_Emc_Traj_Delay
#define PB_MSG_110 pb_Emc_Spindle_On
#define PB_MSG_111 pb_Emc_Spindle_Speed
#define PB_MSG_112 pb_Emc_Spindle_Orient
#define PB_MSG_113 pb_Emc_Spindle_Wait_Orient_Complete
#define PB_MSG_114 pb_Emc_Tool_Set_Offset
#define PB_MSG_115 pb_Emc_Traj_Set_Offset
#define PB_MSG_116 pb_Emc_Tool_Prepare
#define PB_MSG_117 pb_Emc_Tool_Set_Number
#define PB_MSG_118 pb_Emc_Traj_Set_Fo_Enable
#define PB_MSG_119 pb_Emc_Traj_Set_So_Enable
#define PB_MSG_120 pb_Emc_Traj_Set_Fh_Enable
#define PB_MSG_121 pb_Emc_Motion_Adaptive
#define PB_MSG_122 pb_Emc_Operator_Display
#define PB_MSG_123 pb_Emc_Operator_Text
#define PB_MSG_124 pb_Emc_Operator_Error
#define PB_MSG_125 pb_Emc_Motion_Set_Dout
#define PB_MSG_126 pb_Emc_Motion_Set_Aout
#define PB_MSG_127 pb_Emc_Aux_Input_Wait
#define PB_MSG_128 pb_Emc_Exec_Plugin_Ca1l
#define PB_MSG_129 pb_Emc_Io_Plugin_Call

#define CANON_MESSAGES \
	PB_MSG(100,(13 + pb_EmcPose_size),pb_Emc_Traj_Set_G5x) \
	PB_MSG(101,(6 + pb_EmcPose_size),pb_Emc_Traj_Set_G92) \
	PB_MSG(102,9,pb_Emc_Traj_Set_Rotation) \
	PB_MSG(103,(58 + pb_EmcPose_size),pb_Emc_Traj_Linear_Move) \
	PB_MSG(104,(50 + pb_EmcPose_size),pb_Emc_Traj_Probe) \
	PB_MSG(105,(72 + pb_EmcPose_size + pb_PmCartesian_size + pb_PmCartesian_size),pb_Emc_Traj_Circular_Move) \
	PB_MSG(106,(37 + pb_EmcPose_size),pb_Emc_Traj_Rigid_Tap) \
	PB_MSG(107,16,pb_Emc_Traj_Set_Term_Cond) \
	PB_MSG(108,12,pb_Emc_Traj_Set_Spindlesync) \
	PB_MSG(109,9,pb_Emc_Traj_Delay) \
	PB_MSG(110,29,pb_Emc_Spindle_On) \
	PB_MSG(111,29,pb_Emc_Spindle_Speed) \
	PB_MSG(112,16,pb_Emc_Spindle_Orient) \
	PB_MSG(113,9,pb_Emc_Spindle_Wait_Orient_Complete) \
	PB_MSG(114,(71 + pb_EmcPose_size),pb_Emc_Tool_Set_Offset) \
	PB_MSG(115,(6 + pb_EmcPose_size),pb_Emc_Traj_Set_Offset) \
	PB_MSG(116,23,pb_Emc_Tool_Prepare) \
	PB_MSG(117,11,pb_Emc_Tool_Set_Number) \
	PB_MSG(118,2,pb_Emc_Traj_Set_Fo_Enable) \
	PB_MSG(119,2,pb_Emc_Traj_Set_So_Enable) \
	PB_MSG(120,2,pb_Emc_Traj_Set_Fh_Enable) \
	PB_MSG(121,2,pb_Emc_Motion_Adaptive) \
	PB_MSG(122,-1,pb_Emc_Operator_Display) \
	PB_MSG(123,-1,pb_Emc_Operator_Text) \
	PB_MSG(124,-1,pb_Emc_Operator_Error) \
	PB_MSG(125,15,pb_Emc_Motion_Set_Dout) \
	PB_MSG(126,29,pb_Emc_Motion_Set_Aout) \
	PB_MSG(127,30,pb_Emc_Aux_Input_Wait) \
	PB_MSG(128,-1,pb_Emc_Exec_Plugin_Ca1l) \
	PB_MSG(129,-1,pb_Emc_Io_Plugin_Call) \

#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
